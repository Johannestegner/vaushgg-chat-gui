@keyframes NEAT-anim {
	0%,
	100% {
		transform: scale(0, 0);
	}
	10% {
		transform: scale(1, 1);
	}
	50% {
		transform: scale(0.05, 0.05);
	}
}
.chat-emote-NEAT:before {
	content: "Â¤";
	text-indent: 0;
	font-size: 27px;
	line-height: initial;
	position: absolute;
	opacity: 1;
	top: 1.5px;
	left: 11.5px;
	text-shadow: -1px -1px 0 rgba(255, 255, 255, 0.75), 1px -1px 1px rgba(255, 255, 255, 0.75), -1px 1px 0 rgba(255, 255, 255, 0.75), 1px 1px 1px rgba(255, 255, 255, 0.75);
	transform: scale(0, 0);
	filter: hue-rotate(-120deg) brightness(200);
	animation: NEAT-anim 300ms 5;
}

.chat-emote-NEATCLIP:hover::before,
.chat-emote-NEAT:hover::before {
	animation: NEAT-anim 300ms infinite;
}

.chat-emote-NEATCLIP:before {
	content: "Â¤";
	text-indent: 0;
	font-size: 27px;
	line-height: initial;
	position: absolute;
	opacity: 1;
	top: 7.5px;
	left: 14.5px;
	text-shadow: -1px -1px 0 rgba(255, 255, 255, 0.75), 1px -1px 1px rgba(255, 255, 255, 0.75), -1px 1px 0 rgba(255, 255, 255, 0.75), 1px 1px 1px rgba(255, 255, 255, 0.75);
	transform: scale(0, 0);
	filter: hue-rotate(-120deg) brightness(200);
	animation: NEAT-anim 300ms 5;
}

@keyframes VAYAYA-anim {
	0% {
		transform: translate(0px, 0px);
	}
	25% {
		transform: translate(0px, -7.5px) rotate(-3deg);
		animation-timing-function: ease;
	}
	37% {
		transform: translate(0px, 0px) rotate(-3deg);
		animation-timing-function: ease-in;
	}
	55% {
		transform: translate(0px, -3px) rotate(4deg);
		animation-timing-function: ease;
	}
	60% {
		transform: translate(0px, 0px) rotate(4deg);
		animation-timing-function: ease-in;
	}
	75% {
		transform: translate(0px, -1.5px);
		animation-timing-function: ease;
	}
	100% {
		transform: translate(0px, 0px);
		animation-timing-function: ease-in;
	}
}

.chat-emote-VAYAYA {
	animation: VAYAYA-anim 750ms 1;
	&:hover {
		animation: VAYAYA-anim 750ms infinite;
	}
}

@keyframes VAYAYAH-anim {
	0%,
	60%,
	100% {
		transform: scale(0, 0) rotate(4deg);
	}
	80% {
		transform: scale(0.8, 0.8) rotate(160deg);
	}
	90% {
		transform: scale(0.05, 0.05) rotate(320deg);
	}
}

.chat-emote-VAYAYA:before {
	content: "";
	text-indent: 0;
	display: none;
	font-size: 12px;
	line-height: initial;
	position: absolute;
	opacity: 0.9;
	color: #fff;
	top: 4.5px;
	left: -1.5px;
	text-shadow: -1px -1px 0 rgba(255, 255, 255, 0.75), 1px -1px 1px rgba(255, 255, 255, 0.75), -1px 1px 0 rgba(255, 255, 255, 0.75), 1px 1px 1px rgba(255, 255, 255, 0.75);
	transform: scale(0, 0) rotate(4deg);
	filter: hue-rotate(-120deg) brightness(200);
	//filter: hue-rotate(-120deg) brightness(200);
	animation: VAYAYAH-anim 750ms 1;
}
.chat-emote-VAYAYA:hover:before {
	animation: VAYAYAH-anim 750ms infinite;
}

@keyframes AngelThump-anim {
	0%,
	100% {
		filter: brightness(100%);
	}
	60%,
	80% {
		filter: brightness(125%);
	}
}

.chat-emote-AngelThump {
	filter: brightness(100%);
	animation: AngelThump-anim 1.5s 1 ease-in;
	transition: filter 1.5s ease;
	will-change: filter;
	&:hover {
		filter: brightness(125%);
	}
}

@keyframes CLANGGANG-anim {
	0%,
	100% {
		transform: rotate(0deg);
		transform-origin: 50% 30px;
	}
	20% {
		transform: rotate(-25deg) translate(0, 0px);
		transform-origin: 50% 30px;
	}
	30% {
		transform: rotate(-30deg) translate(0, 0px);
		transform-origin: 50% 30px;
	}
	40% {
		transform: rotate(-35deg) translate(4px, -0.5px);
		transform-origin: 50% 30px;
	}
	50% {
		transform: rotate(-25deg) translate(6px, 0px);
		transform-origin: 50% 30px;
	}
	70% {
		transform: rotate(5deg) translate(6px, 0px);
		transform-origin: 50% 32px;
	}
	80% {
		transform: rotate(10deg) translate(6px, 0px);
		transform-origin: 50% 30px;
	}
	90% {
		transform: rotate(15deg) translate(2px, -0.5px);
		transform-origin: 50% 30px;
	}
}

.chat-emote-CLANGGANG {
	animation: CLANGGANG-anim 0.69s 5 ease-out;
}
.chat-emote-CLANGGANG:hover {
	animation: CLANGGANG-anim 0.69s infinite ease-out;
}

@keyframes CLANGGANGH-anim {
	0%,
	100% {
		transform: scale(0, 0);
	}
	10% {
		transform: scale(1, 1);
	}
	50% {
		transform: scale(0.05, 0.05);
	}
}
.chat-emote-CLANGGANG:before {
	content: "âºŒ";
	text-indent: 0;
	font-size: 32px;
	line-height: initial;
	position: absolute;
	opacity: 1;
	color: #f9dc00;
	top: -1.5px;
	left: 17.5px;
	text-shadow: -1px -1px 0 rgba(251, 243, 10, 0.75), 1px -1px 1px rgba(255, 233, 0, 0.75), -1px 1px 0 rgba(255, 254, 3, 0.75), 1px 1px 1px rgba(249, 255, 0, 0.75);
	transform: scale(0, 0);
	animation: CLANGGANGH-anim 300ms 10;
}
.chat-emote-CLANGGANG:hover::before {
	animation: CLANGGANGH-anim 300ms infinite;
}

.chat-emote-Porki:before {
	content: "ðŸ’°";
	text-indent: 0;
	font-size: 18px;
	position: absolute;
	left: -3px;
	top: -25px;
	animation: Shekels-anim 0.5s 8;
}
.chat-emote-Porki:hover::before {
	animation: Shekels-anim 0.5s infinite;
}
.chat-emote-Porki:after {
	content: "ðŸ’°";
	text-indent: 0;
	font-size: 18px;
	position: absolute;
	right: -3px;
	top: -25px;
	animation: Shekels-anim 0.5s 8;
	animation-delay: 0.25s;
}
.chat-emote-Porki:hover::after {
	animation: Shekels-anim 0.5s infinite;
	animation-delay: 0.25s;
}

@keyframes PepeHands-anim {
	0% {
		transform: translate(0px, 0px) rotate(40deg);
	}
	100% {
		transform: translate(-58px, 58px) rotate(40deg);
	}
}

.chat-emote-PepeHands::before {
	content: ". | . . | . | . | . . | . | | . . | . | . |";
	text-indent: 0;
	color: rgb(128, 255, 255);
	font-size: 10px;
	line-height: initial;
	position: absolute;
	opacity: 0.6;
	top: -32px;
	left: 32px;
	width: 48px;
	animation: PepeHands-anim 0.8s 4 linear;
}
.chat-emote-PepeHands::after {
	content: " . | . . | | . . | . | . | . | . | . . | . . | . |";
	text-indent: 0;
	color: rgb(128, 255, 255);
	font-size: 10px;
	opacity: 0.6;
	line-height: initial;
	position: absolute;
	top: -32px;
	left: 32px;
	width: 48px;
	animation: PepeHands-anim 0.8s 4 linear;
	animation-delay: 0.4s;
}
.chat-emote-PepeHands:hover::before {
	animation: PepeHands-anim 0.8s infinite linear;
}
.chat-emote-PepeHands:hover::after {
	animation: PepeHands-anim 0.8s infinite linear;
	animation-delay: 0.4s;
}

@keyframes BERN-anim {
	0%,
	5%,
	87%,
	100% {
		transform: scale(0, 0);
		transform-origin: bottom;
	}
	5.5%,
	85% {
		transform: scale(0.3, 0.2);
		transform-origin: bottom;
	}
	6%,
	83% {
		transform: scale(0.3, 0.66);
		transform-origin: bottom;
	}
	7%,
	80% {
		transform: scale(1, 0.66);
		transform-origin: bottom;
	}
}

.chat-emote-BERN:before {
	font-style: normal;
	content: "!";
	text-indent: 0;
	font-size: 38px;
	line-height: initial;
	position: absolute;
	opacity: 1;
	top: -19px;
	color: red;
	left: 1px;
	text-shadow: -1px -1px 0 rgba(0, 0, 0, 0.75), 1px -1px 1px rgba(0, 0, 0, 0.75), -1px 1px 0 rgba(0, 0, 0, 0.75), 1px 1px 1px rgba(0, 0, 0, 0.75);
	transform: scale(0, 0);
	animation: BERN-anim 2s 1;
}
.chat-emote-BERN:hover::before {
	animation: BERN 2s infinite;
}

@keyframes GOD-anim {
	0%,
	100% {
		filter: drop-shadow(0 0px 0px rgba(208, 133, 140, 0)) brightness(1);
	}
	5% {
		filter: drop-shadow(0 0px 5px rgba(208, 133, 140, 0.5)) brightness(1.5);
	}
}

.chat-emote-GAWSH {
	animation: GOD-anim 0.8s 1;
}
.chat-emote-GAWSH:hover {
	animation: GOD-anim 0.8s infinite linear;
}

@keyframes TRUMPED-anim {
	0%,
	100% {
		transform: scale(1);
	}
	50% {
		transform: scale(1.2);
	}
}

.chat-emote-TRUMPED {
	animation: TRUMPED-anim 350ms 3;
}
.chat-emote-TRUMPED:hover {
	animation: TRUMPED-anim 350ms infinite;
}

@import "../../common";

$emote-prefix: ".chat-emote-";
$css-animated-emote-animations: ();
$context-css-animated-emote-mixin: false;

// Mixin for defining an emote with a css animation.
// Should be used in combination with emote-animation mixin.
@mixin css-animated-emote($name, $can-animate-forever: false) {
	$context-css-animated-emote-mixin: true !global;
	#{$emote-prefix + $name} {
		@content;
		animation: $css-animated-emote-animations;
		$css-animated-emote-animations: () !global;

		&:hover {
			animation-iteration-count: infinite;
		}

		@if $can-animate-forever {
			&-animate-forever {
				animation-iteration-count: infinite;
			}
		}
	}

	$context-css-animated-emote-mixin: false !global;
}

// Mixin for defining an animation within a css-animated-emote mixin.
// $animation-properties takes the same properties as the `animation` property.
// The mixin body takes the `@keyframes` definition.
@mixin emote-animation($animation-properties: null) {
	@if not $context-css-animated-emote-mixin {
		@error '`emote-animation` should be used inside `css-animated-emote` mixin!';
	}

	$index: length($css-animated-emote-animations);
	$suffix: if($index != 0, -#{$index}, "");
	$emote-name: str_slice(inspect(&), 2 + str_length($emote-prefix), -3);
	$animation-name: #{$emote-name}-anim#{$suffix};

	@at-root {
		@keyframes #{$animation-name} {
			@content;
		}
	}

	$css-animated-emote-animations: append($css-animated-emote-animations, $animation-properties $animation-name, comma) !global;
}

@include css-animated-emote(OverRustle) {
	@include emote-animation(100ms 7) {
		0% {
			left: 0;
		}
		100% {
			left: 3px;
		}
	}
}

@include css-animated-emote(MLADY) {
	transform-origin: 4px bottom;

	@include emote-animation(250ms 3) {
		0% {
			transform: rotate(0deg);
		}
		30% {
			transform: rotate(20deg);
		}
		80% {
			transform: rotate(-10deg);
		}
		100% {
			transform: rotate(0deg);
		}
	}
}

@include css-animated-emote(SpookerZ) {
	@include emote-animation(250ms 3) {
		0% {
			transform: translate(0px 0px);
		}
		25% {
			transform: translate(0px, 4px);
		}
		75% {
			transform: rotate(-10deg);
		}
		100% {
			transform: rotate(0deg);
			transform-origin: 4px bottom;
		}
	}
}

@include css-animated-emote(HEADSHOT) {
	@include emote-animation(1.2s 1) {
		0% {
			transform: translate(0px, 0px);
			filter: blur(0px) brightness(100%);
			animation-timing-function: ease-in;
		}
		25% {
			transform: translate(0px, 4px);
			filter: blur(2px) brightness(80%);
			animation-timing-function: ease-in;
		}
		55% {
			transform: translate(2px, 2px);
			filter: blur(1px) brightness(100%);
			animation-timing-function: ease-in;
		}
		85% {
			transform: translate(3px, 1px);
			filter: blur(0.6px) brightness(100%);
			animation-timing-function: ease-in;
		}
		100% {
			transform: translate(0px, 0px);
			filter: blur(0px) brightness(100%);
			animation-timing-function: ease-in;
		}
	}
}

@include css-animated-emote(SMUGGY) {
	@include emote-animation(600ms 2) {
		0% {
			transform: translate(0px 0px);
		}
		25% {
			transform: translate(0px, 4px);
		}
		75% {
			transform: rotate(-10deg);
		}
		100% {
			transform: rotate(0deg);
			transform-origin: 4px bottom;
		}
	}
}

@include css-animated-emote(SMUG) {
	@include emote-animation(800ms 1) {
		0% {
			transform: translate(0px 0px);
		}
		25% {
			transform: translate(0px, 4px);
		}
		75% {
			transform: rotate(-5deg);
		}
		100% {
			transform: rotate(0deg);
			transform-origin: 4px bottom;
		}
	}
}

@include css-animated-emote(DANKMEMES) {
	@include emote-animation(1s 2) {
		0%,
		100% {
			filter: hue-rotate(0deg);
		}
		50% {
			filter: hue-rotate(360deg);
		}
	}
}

@include css-animated-emote(DICKS) {
	@include emote-animation(1s 4) {
		0%,
		100% {
			filter: hue-rotate(0deg);
		}
		50% {
			filter: hue-rotate(360deg);
		}
	}
}

@include css-animated-emote(WEEWOO) {
	@include emote-animation(1.5s 1) {
		0%,
		100% {
			opacity: 1;
		}
		10% {
			opacity: 0.5;
			filter: hue-rotate(0deg);
		}
		11% {
			filter: hue-rotate(170deg);
		}
		35% {
			opacity: 1;
		}
		50% {
			opacity: 0.2;
			filter: hue-rotate(170deg);
		}
		51% {
			filter: hue-rotate(310deg);
		}
		65% {
			opacity: 1;
		}
		90% {
			opacity: 0.2;
			filter: hue-rotate(310deg);
		}
		91% {
			filter: hue-rotate(0deg);
		}
	}
}

@include css-animated-emote(F) {
	@include emote-animation(750ms 1) {
		0% {
			transform: translate(0px 0px) scale(0.5);
		}
		5%,
		15%,
		25%,
		35% {
			transform: translate(0px, 3px);
		}
		15%,
		35%,
		55% {
			transform: translate(0px, -3px);
		}
		10%,
		20%,
		30%,
		40%,
		50% {
			transform: translate(3px, 0px);
		}
		15.1% {
			transform: scale(0.5);
			filter: hue-rotate(-5deg);
		}
		30.1% {
			transform: scale(0.75);
			opacity: 0.75;
			filter: hue-rotate(-5deg) saturate(125%);
		}
		60% {
			transform: scale(1.25);
			filter: hue-rotate(-25deg) saturate(150%);
			opacity: 0.75;
		}
		70% {
			opacity: 0;
		}
		90% {
			opacity: 0;
			transform: scale(0.1);
		}
		100% {
			transform: translate(0px, 0px) scale(1);
			opacity: 1;
		}
	}
}

@include css-animated-emote(Hhhehhehe) {
	@include emote-animation(500ms 1) {
		0%,
		40%,
		80% {
			transform: translate(0px, 0px) rotate(-0deg);
		}
		20%,
		60%,
		100% {
			transform: translate(0px, 3px) rotate(-6deg);
		}
	}
}

@include css-animated-emote(Mlem) {
	@include emote-animation(500ms 1) {
		0%,
		40%,
		80% {
			transform: translate(0px, 0px) rotate(-0deg);
		}
		20%,
		60%,
		100% {
			transform: translate(0px, 3px) rotate(-6deg);
		}
	}
}

@include css-animated-emote(REE) {
	@include emote-animation(100ms 7) {
		from {
			left: 0;
		}
		to {
			left: 3px;
		}
	}
}

@include css-animated-emote(ITSRAWWW) {
	@include emote-animation(100ms 7) {
		0% {
			left: 0;
		}
		100% {
			left: 2px;
		}
	}
}

@include css-animated-emote(STABBY) {
	@include emote-animation(750ms 3) {
		0%,
		16.6%,
		33.3%,
		50% {
			transform: rotate(0deg);
			transform-origin: -36px 32px;
		}
		5%,
		21.6%,
		38.3% {
			transform: rotate(20deg);
			transform-origin: -36px 32px;
		}
		13.3%,
		29.9%,
		46.6% {
			transform: rotate(-10deg);
			transform-origin: -36px 32px;
		}
	}
}

@include css-animated-emote(AYAYA) {
	@include emote-animation(750ms 1) {
		0% {
			transform: translate(0px, 0px);
		}
		25% {
			transform: translate(0px, -7.5px) rotate(-3deg);
			animation-timing-function: ease;
		}
		37% {
			transform: translate(0px, 0px) rotate(-3deg);
			animation-timing-function: ease-in;
		}
		55% {
			transform: translate(0px, -3px) rotate(4deg);
			animation-timing-function: ease;
		}
		60% {
			transform: translate(0px, 0px) rotate(4deg);
			animation-timing-function: ease-in;
		}
		75% {
			transform: translate(0px, -1.5px);
			animation-timing-function: ease;
		}
		100% {
			transform: translate(0px, 0px);
			animation-timing-function: ease-in;
		}
	}
}

@include css-animated-emote(SUGOI) {
	@include emote-animation(750ms 1) {
		0% {
			transform: translate(0px, 0px);
		}
		25% {
			transform: translate(0px, -7.5px) rotate(-3deg);
			animation-timing-function: ease;
		}
		37% {
			transform: translate(0px, 0px) rotate(-3deg);
			animation-timing-function: ease-in;
		}
		55% {
			transform: translate(0px, -3px) rotate(4deg);
			animation-timing-function: ease;
		}
		60% {
			transform: translate(0px, 0px) rotate(4deg);
			animation-timing-function: ease-in;
		}
		75% {
			transform: translate(0px, -1.5px);
			animation-timing-function: ease;
		}
		100% {
			transform: translate(0px, 0px);
			animation-timing-function: ease-in;
		}
	}
}

@include css-animated-emote(peepoShook) {
	@include emote-animation(250ms 5) {
		0%,
		100%,
		10% {
			transform: translate(0px, 0px);
			animation-timing-function: ease;
		}
		11%,
		12%,
		20% {
			transform: translate(-1px, 1px);
			animation-timing-function: ease;
		}
		21%,
		22%,
		30% {
			transform: translate(1px, 0px);
			animation-timing-function: ease;
		}
		31%,
		32%,
		30% {
			transform: translate(0px, 2px);
			animation-timing-function: ease;
		}
		41%,
		42%,
		30% {
			transform: translate(-1px, -1px);
			animation-timing-function: ease;
		}
		51%,
		52%,
		30% {
			transform: translate(0px, -1px);
			animation-timing-function: ease;
		}
		61%,
		62%,
		30% {
			transform: translate(1px, 1px);
			animation-timing-function: ease;
		}
		71%,
		72%,
		30% {
			transform: translate(-1px, 2px);
			animation-timing-function: ease;
		}
		81%,
		82%,
		30% {
			transform: translate(1px, 0px);
			animation-timing-function: ease;
		}
		91%,
		92%,
		99% {
			transform: translate(0px, -2px);
			animation-timing-function: ease;
		}
	}
}

@include css-animated-emote(NOM) {
	@include emote-animation(2s 1) {
		0% {
			transform: translate(0px, 0px);
		}
		70% {
			transform: translate(-3px, 0px) rotate(-1deg);
			animation-timing-function: ease-in;
		}
		85% {
			transform: translate(-5px, 0px) rotate(-2deg);
			animation-timing-function: ease-in;
		}
		100% {
			transform: translate(0px, 0px);
			animation-timing-function: ease-in;
		}
	}
}

@include css-animated-emote(peepoBox) {
	@include emote-animation(2s 1) {
		0%,
		10%,
		100% {
			transform: translate(0px, 0px);
		}
		15% {
			transform: translate(-2px, 1px);
			animation-timing-function: ease-in;
		}
		20%,
		35% {
			transform: translate(-3px, 0px);
			animation-timing-function: ease-in;
		}
		40% {
			transform: translate(-2px, 0px);
			animation-timing-function: ease-in;
		}
		45% {
			transform: translate(-0px, 0px);
			animation-timing-function: ease-in;
		}
		50% {
			transform: translate(2px, 0px);
			animation-timing-function: ease-in;
		}
		60% {
			transform: translate(1px, 1px);
			animation-timing-function: ease-in;
		}
		70% {
			transform: translate(0px, 0px);
			animation-timing-function: ease-in;
		}
		85%,
		95% {
			transform: translate(1px, 0px);
			animation-timing-function: ease-in;
		}
	}
}

@include css-animated-emote(BLADE) {
	@include emote-animation(750ms 1) {
		0% {
			transform: rotate(0deg);
			transform-origin: -36x 32px;
		}
		5% {
			transform: rotate(20deg);
			transform-origin: -36px 32px;
		}
		13.3% {
			transform: rotate(-10deg);
			transform-origin: -36px 32px;
		}
		16.6% {
			transform: rotate(0deg);
			transform-origin: -36px 32px;
		}
		21.6% {
			transform: rotate(20deg);
			transform-origin: -36px 32px;
		}
		29.9% {
			transform: rotate(-10deg);
			transform-origin: -36px 32px;
		}
		33.3% {
			transform: rotate(0deg);
			transform-origin: -36px 32px;
		}
		38.3% {
			transform: rotate(20deg);
			transform-origin: -36px 32px;
		}
		46.6% {
			transform: rotate(-10deg);
			transform-origin: -36px 32px;
		}
		50% {
			transform: rotate(0deg);
			transform-origin: -36px 32px;
		}
		50.1% {
			transform: translate(0, 0) rotate(0deg);
			transform-origin: left bottom;
		}
		55% {
			transform: translate(0px, -10px) rotate(45deg);
			transform-origin: left bottom;
		}
		60% {
			transform: translate(0px, -10px) rotate(45deg);
			transform-origin: left bottom;
		}
		62% {
			transform: translate(18px, -10px) rotate(45deg);
			transform-origin: left bottom;
		}
		75% {
			transform: translate(20px, -10px) rotate(45deg);
			transform-origin: left bottom;
		}
		82% {
			transform: translate(16px, -10px) rotate(45deg);
			transform-origin: left bottom;
		}
		87% {
			transform: translate(-10px, -10px) rotate(45deg);
			transform-origin: left bottom;
		}
		95% {
			transform: translate(-10px, -10px) rotate(45deg);
			transform-origin: left bottom;
		}
		100% {
			transform: translate(0px, 0px) rotate(0deg);
			transform-origin: left bottom;
		}
	}
}

@include css-animated-emote(MILKSHAKE) {
	@include emote-animation(1.5s 1) {
		0% {
			transform: translate(0, 0) rotate(0deg);
			opacity: 1;
			transform-origin: right bottom;
		}
		5% {
			transform: translate(-10px, -1px) rotate(-15deg);
			opacity: 1;
			transform-origin: right bottom;
		}
		30% {
			transform: translate(-15px, -1px) rotate(-25deg);
			opacity: 1;
			transform-origin: right bottom;
		}
		47% {
			transform: translate(25px, -5px) rotate(45deg);
			opacity: 0.5;
			transform-origin: right bottom;
		}
		55% {
			transform: translate(25px, -5px) rotate(45deg);
			opacity: 0;
			transform-origin: right bottom;
		}

		80% {
			transform: translate(0px, 4px) rotate(0deg);
			opacity: 0;
			transform-origin: right bottom;
		}
		100% {
			transform: translate(0px, 0px) rotate(0deg);
			opacity: 1;
			transform-origin: right bottom;
		}
	}
}

@include css-animated-emote(NotLikeThis) {
	@include emote-animation(800ms 1) {
		0%,
		100% {
			transform: rotate(0deg) translate(0, 0);
		}
		25%,
		75% {
			transform: rotate(20deg) translate(6px, 4px);
		}
	}
}

@include css-animated-emote(DAB) {
	@include emote-animation(400ms 4) {
		0%,
		48%,
		100% {
			transform: rotateY(0deg);
			opacity: 1;
		}
		50%,
		98% {
			transform: rotateY(-180deg);
			opacity: 1;
		}
	}
}

@include css-animated-emote(DJPepo, true) {
	@include emote-animation(500ms 7) {
		0% {
			top: 10;
		}
		100% {
			top: 12px;
		}
	}
}

@include css-animated-emote(PepeLaugh, true) {
	@include emote-animation(200ms 5) {
		0%,
		100% {
			transform: translate(0px, 0px);
		}
		50% {
			transform: translate(0px, 3px);
		}
	}
}

@keyframes emote-hit {
	0%,
	2%,
	4% {
		color: #b91010;
		font-size: 200%;
	}
	1%,
	3% {
		color: $color-light;
		font-size: 190%;
	}
	100% {
		color: $color-light;
		font-size: 120%;
	}
}

@keyframes rustle {
	from {
		left: 0;
	}
	to {
		left: 3px;
	}
}

@keyframes dankmemes-anim {
	0%,
	100% {
		filter: hue-rotate(0deg);
	}
	50% {
		filter: hue-rotate(360deg);
	}
}

@keyframes Shekels-anim {
	0%,
	100% {
		top: -25px;
	}
	99% {
		top: 30px;
	}
}

@keyframes spin {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}
